version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:8.0.282
    # machine:
    #   image: ubuntu-2004:202104-01

    environment:
      JVM_OPTS: -Xmx3200m
      _JAVA_OPTIONS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - checkout
      # - restore_cache:
      #     keys:
      #       - v3-dependencies-{{ checksum "build.gradle" }}
      #       - v3-dependencies-

      # - run: gradle dependencies
      # - save_cache:
      #     paths:
      #       - ~/repo/.gradle
      #     key: v3-dependencies-{{ checksum "build.gradle" }}
      # - run: gradle test
      # - run: gradle build
      - run: mkdir -p ~/project/build/libs
      - run: echo "test" > ~/project/build/libs/test.jar
      - store_artifacts:
          path: ~/project/build/libs
      - persist_to_workspace:
          root: ~/project/build/libs
          paths: 
            - test.jar

  deploy:
    docker:
      - image: cimg/base:2021.07
    steps:
      - attach_workspace:
          at: ~/project
      - run: ls -a 
      # Docker image source from: https://github.com/pterodactyl/images/tree/java
      - run: |
            echo "
            #!/bin/bash
            cd /home/container

            # Output Current Java Version
            java -version

            # Make internal Docker IP address available to processes.
            export INTERNAL_IP=`ip route get 1 | awk '{print $NF;exit}'`

            # Replace Startup Variables
            MODIFIED_STARTUP=`eval echo $(echo ${STARTUP} | sed -e 's/{{/${/g' -e 's/}}/}/g')`
            echo ":/home/container$ ${MODIFIED_STARTUP}"

            # Run the Server
            eval ${MODIFIED_STARTUP}
            " > entrypoint.sh
      - run: |
            echo "
            FROM openjdk:8-jre-slim
            RUN apt-get update -y \
            && apt-get install -y curl ca-certificates openssl git tar sqlite fontconfig tzdata iproute2 \
            && useradd -d /home/container -m container
            
            USER container
            ENV USER=container HOME=/home/container

            USER container
            ENV USER=container HOME=/home/container

            WORKDIR /home/container

            COPY ./libs/test.jar /mods/test.jar
            COPY ./entrypoint.sh /entrypoint.sh
            " > Dockerfile
      - run: docker build .
    

workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          # filters:
          #   branches:
          #     only: 
          #       - "main"
          requires:
            - build