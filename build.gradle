buildscript {
    repositories {
        maven {
            name 'Forge'
            url 'https://files.minecraftforge.net/maven'
        }
        maven {
            name 'Sponge'
            url 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name 'Gradle'
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.5"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.wynprice.cursemaven"

version = project.mc_version + '-v' +project.aether_version
group = 'com.gildedgames.aether' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'aether'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

minecraft {
    mappings channel: 'official', version: project.mappings

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            //Only uncomment this if you actually need the debug logging! If you enable this the log will be full of incredibly useless information spam
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            //property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            arg "--mixin=aether.mixins.json"

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            args '--mod', 'aether', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing', file('src/generated/resources/')

            environment 'target', 'fmluserdevdata'

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")

    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-${project.crafttweaker_version}")

    compileOnly fg.deobf("curse.maven:colytra:${project.colytra_version}")
    
    compileOnly fg.deobf("curse.maven:caelus:${project.caelus_version}")

    runtime fg.deobf("io.github.ultimateboomer:smoothboot-forge:${project.smoothboot_version}")
}

repositories {
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "http://jcenter.bintray.com/" }
}

jar {
    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": "Gilded Games",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" : "Gilded Games",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "aether.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

mixin {
    add sourceSets.main, "aether.refmap.json"
}