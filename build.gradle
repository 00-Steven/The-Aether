buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url= 'https://dist.creeper.host/Sponge/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = project.mc_version + '-v' +project.aether_version
group = 'com.aether' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'aether'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: project.mappings

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            //Only uncomment this if you actually need the debug logging! If you enable this the log will be full of incredibly useless information spam
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            property 'mixin.env.disableRefMap', 'true'
            arg "--mixin=aether.mixins.json"

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            args '--mod', 'aether', '--all', '--output', file('src/generated/resources/')

            mods {
                aether {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}:api")

    runtime fg.deobf("io.github.ultimateboomer:smoothboot-forge:${project.smoothboot_version}")
}

repositories {
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "http://jcenter.bintray.com/" }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "aether",
            "Specification-Vendor": "aether",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"aether",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "aether.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

mixin {
    add sourceSets.main, "aether.refmap.json"
}